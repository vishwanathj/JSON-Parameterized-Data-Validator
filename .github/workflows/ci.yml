name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    
env:
  GOLANGCI_VER: v1.40.1
  GO_VER: 1.15
  GO_SEC_VER: v2.8.0

jobs:

  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      - name: Run golangci-lint invoking supported github action
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: ${{ env.GOLANGCI_VER }}
          working-directory: pkg/jsondatavalidator

      - name: Ensure lint tests are executed inside container as well
        run:
          make docker-lint
  
  security:
    runs-on: ubuntu-latest
    
    env:
      GO111MODULE: on
      
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
        
      - name: Run Gosec Security Scanner invoking supported github action
        uses: securego/gosec@v2.8.0
        with:
          # we let the report trigger content trigger a failure using the GitHub Security features.
          args: ./...

      - name: Ensure gosec tests are executed inside container as well
        run:
          make docker-gosec
  
  unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ env.GO_VER }}

    - name: Test
      run: go test -v ./... -count=1 -tags=unit

    - name: ensure running unit tests inside golang docker container passes as well
      run:
        make docker-unit-tests
